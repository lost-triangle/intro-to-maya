"use strict";(self.webpackChunkintro_to_maya_docusaurus=self.webpackChunkintro_to_maya_docusaurus||[]).push([[4661],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),l=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),h=i,g=p["".concat(d,".").concat(h)]||p[h]||c[h]||a;return t?r.createElement(g,o(o({ref:n},u),{},{components:t})):r.createElement(g,o({ref:n},u))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=p;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8452:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],s={title:"1. Shading UI"},d="Shading UI",l={unversionedId:"shading/ShadingUI",id:"shading/ShadingUI",title:"1. Shading UI",description:"Vorbereitungen",source:"@site/docs/07_shading/01_ShadingUI.md",sourceDirName:"07_shading",slug:"/shading/ShadingUI",permalink:"/docs/shading/ShadingUI",draft:!1,editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/07_shading/01_ShadingUI.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"1. Shading UI"},sidebar:"mySidebar",previous:{title:"7. Shading",permalink:"/docs/shading/"},next:{title:"2. Shading Grundlagen",permalink:"/docs/shading/ShaderBasics"}},u={},c=[{value:"Vorbereitungen",id:"vorbereitungen",level:2},{value:"Men\xfc",id:"men\xfc",level:2},{value:"Panels",id:"panels",level:2},{value:"Shelf",id:"shelf",level:2}],p={toc:c};function h(e){var n=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"shading-ui"},"Shading UI"),(0,a.kt)("h2",{id:"vorbereitungen"},"Vorbereitungen"),(0,a.kt)("p",null,'Wir werden die Render Engine "Arnold" verwenden.'),(0,a.kt)("p",null,"Um Arnold verwenden zu k\xf6nnen muss man das Plug-In installiert und aktiviert haben."),(0,a.kt)("h2",{id:"men\xfc"},"Men\xfc"),(0,a.kt)("p",null,"Um zu rendern braucht man das Men\xfc \u201eRendering\u201c (",(0,a.kt)("strong",{parentName:"p"},"F6"),")."),(0,a.kt)("h2",{id:"panels"},"Panels"),(0,a.kt)("p",null,"Beim vorbereiten auf das Rendern benutzt man den \u201eHypershade Editor\u201c, die \u201eRender View\u201c und eine Kamera-Ansicht."),(0,a.kt)("h2",{id:"shelf"},"Shelf"),(0,a.kt)("p",null,"Die \u201cRendering\u201d-Shelf ist eingeteilt in Lichter, Camera, Basis Shader und Render Einstellungen"),(0,a.kt)("p",null,(0,a.kt)("img",{src:t(5589).Z,width:"454",height:"94"})),(0,a.kt)("h1",{id:"zuweisung-eines-shaders"},"Zuweisung eines Shaders"),(0,a.kt)("h1",{id:"hypershade"},"Hypershade"),(0,a.kt)("p",null,"Man benutzt den Hypershade um sich zu visualisieren wie ein Shader funktioniert.\nMan kann eigene Shader \u201eprogrammieren\u201c indem man verschiedene Nodes miteinander verbindet.\nMan \xf6ffnet den Hypershade mit #","[span.menu Window > Rendering Editors > Hypershade]",".\nDer Hypershade besteht aus drei Teilen"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create Nodes (linke Seite): Hier l\xe4sst sich jeder Typ von Shading Node in die Work Area erstellen."),(0,a.kt)("li",{parentName:"ol"},"Existing Shaders (rechts Oben): Eine \xdcbersicht von allen Shading Nodes (wie Materials, Lights, etc.)"),(0,a.kt)("li",{parentName:"ol"},"Work Area (rechts Unten): Hier lassen sich Nodes miteinander verbinden.")))}h.isMDXComponent=!0},5589:function(e,n,t){n.Z=t.p+"assets/images/shelf-4e31628946ded7e5457228c6866d097b.png"}}]);